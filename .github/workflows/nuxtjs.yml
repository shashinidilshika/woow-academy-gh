name: Deploy Nuxt site to Pages

on:
  push:
    branches: ['master']
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Install PNPM
        run: npm install -g pnpm
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
              echo "manager=pnpm" >> $GITHUB_OUTPUT
              echo "command=install -no-frozen-lockfile" >> $GITHUB_OUTPUT
          exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
          echo "manager=yarn" >> $GITHUB_OUTPUT
          echo "command=install" >> $GITHUB_OUTPUT
          exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          exit 0
          else
          echo "Unable to determine package manager"
          exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup PNPM
        uses: actions/setup-node@v3
        with:
          version: 7
          cache: 'pnpm'
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: nuxt
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Static HTML export with Nuxt
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
